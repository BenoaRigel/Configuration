//// Возвращает структру с информацией о пользователе. Структура содержит следующие свойства
////	Администратор  - Булево - Признак того, что пользольватель является администратором
////	ВариантыОбедов - Массив - Масиив в котором содержатся все возможноые варианты обедов. 
////		В случае если пользователь администратор можно вернуть пустой массив
////	ВходРазрешен - Булево - Признак того что вход в систему разрешен
//// 	//отбор
Функция ИнформацияОПользователе() Экспорт
	
	СтруктураВернуть = Новый Структура;	
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Пользователь = Справочники.Пользователи.НайтиПоНаименованию(ПользовательИБ);
	
	НачРабДня = Константы.НачалоРабочегоДня.Получить();
	КонРабДня = Константы.КонецРабочегоДня.Получить();
	Сейчас = Дата(1, 1, 1, Час(ТекущаяДата()), Минута(ТекущаяДата()), 0);
	
	
	Если Сейчас < НачРабДня Тогда
		СтруктураВернуть.Вставить("Статус", "Утро");
	ИначеЕсли Сейчас > КонРабДня Тогда              
		СтруктураВернуть.Вставить("Статус", "Вечер");	
	Иначе
		СтруктураВернуть.Вставить("Статус", "День");
		Сообщить("ДоброПожаловать!!")
	КонецЕсли;
	
	
	СписокЗнач = Новый СписокЗначений;
	
	Спр = Справочники.ВариантыОбедов.Выбрать();
	Пока Спр.Следующий() Цикл 
		СписокЗнач.Добавить(Спр.Ссылка);
	КонецЦикла;	
	СтруктураВернуть.Вставить("Список", СписокЗнач);
	
	
	
	Если Пользователь.Пустая() Тогда 
		
		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование = ПользовательИБ;
		НовыйПользователь.Записать();
		СтруктураВернуть.Вставить("Админ", Ложь);
		СтруктураВернуть.Вставить("Юзер", НовыйПользователь.Ссылка);
		Сообщить ("Пользователь создан");
		
	Иначе
		СтруктураВернуть.Вставить("Админ", Пользователь.Администратор);
		СтруктураВернуть.Вставить("Юзер", Пользователь);
	КонецЕсли;
	
	
	
	////Найти обеды пользователя и добавить информацию в структуру делал ли пользователь сегодня выбор
     Сегодня = Дата(Год(ТекущаяДата()), Месяц(ТекущаяДата()), День(ТекущаяДата()));
	   	//ИначеЕсли ДатаСправочника = Сегодня ТОгда  
	
	СсылкаНаОбед = Справочники.ОбедыПользователей.НайтиПоРеквизиту("Дата",Сегодня,,Пользователь);
	ЮзерВыбрал = НЕ СсылкаНаОбед.Пустая();
	СтруктураВернуть.Вставить("ПользовательНеДелалВыбор", СсылкаНаОбед.Пустая());
	 //ПользоватьНеДелалВыбор
	//Если ЮзерСегодня.Пустая()Тогда 
	//	СтруктураВернуть.Вставить("ПользовательНеДелалВыбор", "ПользовательНеДелалВыбор");
	//ИначеЕсли ЮзерВыбрал Тогда 
	//	СтруктураВернуть.Вставить("ПользовательСделалВыбор", "ПользовательСделалВыбор"); 
	//КонецЕсли;
	
	Возврат СтруктураВернуть;     
	
КонецФункции

Функция ЗаписатьИнформациюВСправочник(ВыбранныеОбеды, Пользователь) Экспорт
	
	ТекущаяДата = ТекущаяДата();
	Для Каждого ТекущийОбед Из ВыбранныеОбеды Цикл
		
		ЗаписьВСпровочник = Справочники.ОбедыПользователей.СоздатьЭлемент();
		ЗаписьВСпровочник.Наименование = СтрШаблон("Обед пользователя %1 от %2", Пользователь.Наименование, Формат(ТекущаяДата, "ДФ=dd.MM.yyyy"));
		ЗаписьВСпровочник.Владелец = Пользователь;
		ЗаписьВСпровочник.ВариантОбеда = ТекущийОбед;
		ЗаписьВСпровочник.Дата = ТекущаяДата;
		ЗаписьВСпровочник.Записать();
			
	КонецЦикла;
	
КонецФункции       
